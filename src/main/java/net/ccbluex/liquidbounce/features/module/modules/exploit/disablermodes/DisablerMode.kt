/*
 * SkidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge, Forked from LiquidBounce.
 * https://github.com/SkidBounce/SkidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes

import net.ccbluex.liquidbounce.event.events.MotionEvent
import net.ccbluex.liquidbounce.event.events.MoveEvent
import net.ccbluex.liquidbounce.event.events.PacketEvent
import net.ccbluex.liquidbounce.event.events.WorldEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.debug
import net.ccbluex.liquidbounce.utils.ClientUtils.displayChatMessage
import net.ccbluex.liquidbounce.utils.MinecraftInstance

open class DisablerMode(val modeName: String) : MinecraftInstance() {
    open fun onMove(event: MoveEvent) {}
    open fun onPacket(event: PacketEvent) {}
    open fun onMotion(event: MotionEvent) {}
    open fun onWorld(event: WorldEvent) {}
    open fun onUpdate() {}
    open fun onEnable() {}
    open fun onDisable() {}

    protected fun debug(message: Any?) {
        if (debug) displayChatMessage("§7[§cDisabler/${javaClass.simpleName}§7]§r $message")
    }

    protected fun debug(type: DebugType, packet: String, multiple: Boolean = false) =
        debug("§c$type §a$packet §c${if (multiple) "Packets" else "Packet"}§7.")

    protected data object Modify : DebugType("Modified")
    protected data object Cancel : DebugType("Cancelled")
    protected data object Send : DebugType("Sent")
    protected sealed class DebugType(private val display: String) {
        override fun toString() = display
    }
}
