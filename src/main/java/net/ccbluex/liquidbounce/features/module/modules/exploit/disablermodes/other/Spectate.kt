/*
 * SkidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge, Forked from LiquidBounce.
 * https://github.com/SkidBounce/SkidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.other

import net.ccbluex.liquidbounce.event.events.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.DisablerMode
import net.ccbluex.liquidbounce.utils.PacketUtils.sendPacket
import net.ccbluex.liquidbounce.value.BooleanValue
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C13PacketPlayerAbilities
import net.minecraft.network.play.client.C18PacketSpectate

/**
 * @author SkidderMC/FDPClient
 */
object Spectate : DisablerMode("Spectate") {
    private val groundSpoof by BooleanValue("GroundSpoof", true)
    private val abilities by BooleanValue("Abilities", true)
    private val abilitiesEveryTick by BooleanValue("AbilitiesEveryTick", true) { abilities }
    override fun onPacket(event: PacketEvent) {
        if (event.packet is C03PacketPlayer) {
            if (groundSpoof) {
                event.packet.onGround = false
                debug(Modify, "Flying")
            }
            sendPacket(C18PacketSpectate(mc.thePlayer.uniqueID))
            debug(Send, "Spectate")
            if (abilitiesEveryTick && abilities) {
                sendPacket(C13PacketPlayerAbilities(mc.thePlayer.capabilities))
                debug(Send, "Abilities")
            }
        } else if (event.packet is C13PacketPlayerAbilities && abilities) {
            event.packet.isFlying = true
            event.packet.isAllowFlying = true
            event.packet.isInvulnerable = true
            event.packet.isCreativeMode = false
            debug(Modify, "Abilities")
        }
    }
}
