/*
 * SkidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge, Forked from LiquidBounce.
 * https://github.com/SkidBounce/SkidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.other

import net.ccbluex.liquidbounce.event.events.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.DisablerMode
import net.ccbluex.liquidbounce.utils.extensions.isUse
import net.ccbluex.liquidbounce.value.ListValue
import net.minecraft.network.play.client.C02PacketUseEntity
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement

object Cursor : DisablerMode("Cursor") {
    private val modes = arrayOf("None", "NaN", "Infinity", "NegativeInfinity")

    private val use by ListValue("Use", modes, "NaN")
    private val place by ListValue("Place", modes, "NaN")
    private val interact by ListValue("Interact", modes + "Null", "NaN")

    private fun get(value: String) = when (value) {
        "NegativeInfinity" -> Float.NEGATIVE_INFINITY
        "Infinity" -> Float.POSITIVE_INFINITY
        "NaN" -> Float.NaN
        else -> null
    }

    override fun onPacket(event: PacketEvent) {
        when (val packet = event.packet) {
            is C08PacketPlayerBlockPlacement -> {
                val value = get(if (packet.isUse) use else place) ?: return
                packet.facingX = value
                packet.facingY = value
                packet.facingZ = value
                debug(Modify, if (packet.isUse) "Use" else "Place")
            }
            is C02PacketUseEntity -> {
                packet.hitVec ?: return
                val value = when (interact) {
                    "Null" -> {
                        packet.hitVec = null
                        debug(Modify, "Interact-At")
                        return
                    }
                    "NegativeInfinity" -> Double.NEGATIVE_INFINITY
                    "Infinity" -> Double.POSITIVE_INFINITY
                    "NaN" -> Double.NaN
                    else -> return
                }
                packet.hitVec.xCoord = value
                packet.hitVec.yCoord = value
                packet.hitVec.zCoord = value
                debug(Modify, "Interact-At")
            }
        }
    }
}
